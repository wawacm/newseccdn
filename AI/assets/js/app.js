class GeminiChatApp{constructor(){this.currentUser=null,this.currentSession=null,this.attachments=[],this.isLoading=!1,this.init()}init(){this.bindEvents(),this.checkAuth(),this.autoResizeTextarea(),this.initMobileFeatures(),this.initPasteAndDrop(),this.initNotification(),this.initLoginStatusCheck(),this.initThinkingButton(),document.addEventListener("keydown",(e=>{if("Escape"===e.key){const e=document.querySelector(".sidebar");e&&e.classList.contains("mobile-open")&&this.forceCloseSidebar()}}));const e=document.getElementById("emergencyCloseBtn");e&&e.remove()}initNotification(){const e=document.getElementById("notificationClose");e&&e.addEventListener("click",(()=>this.hideNotification()))}initLoginStatusCheck(){setInterval((async()=>{if(this.currentUser&&!document.getElementById("loginPage").classList.contains("active"))try{(await this.apiCall("/auth/user")).success||this.handleLoginExpired()}catch(e){console.log("登录状态检查失败:",e.message)}}),3e5)}toggleMobileSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("sidebarOverlay");if(e){if(!t){const e=document.createElement("div");e.id="sidebarOverlay",e.className="sidebar-overlay",e.addEventListener("click",(()=>this.closeMobileSidebar())),document.body.appendChild(e)}e.classList.contains("mobile-open")?this.closeMobileSidebar():(e.classList.add("mobile-open"),document.getElementById("sidebarOverlay").classList.add("active"),document.body.style.overflow="hidden")}}closeMobileSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("sidebarOverlay");e&&e.classList.remove("mobile-open"),t&&t.classList.remove("active"),document.body.style.overflow=""}bindEvents(){document.getElementById("loginForm").addEventListener("submit",(e=>this.handleLogin(e))),document.getElementById("registerForm").addEventListener("submit",(e=>this.handleRegister(e))),document.querySelectorAll(".tab-btn").forEach((e=>{e.addEventListener("click",(e=>this.switchAuthTab(e)))})),document.getElementById("newChatBtn").addEventListener("click",(()=>this.createNewSession())),document.getElementById("sendBtn").addEventListener("click",(()=>this.sendMessage())),document.getElementById("messageInput").addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.isLoading?this.showNotification("WaWa AI正在回复中...请稍等","warning"):this.sendMessage())})),document.getElementById("messageInput").addEventListener("input",(()=>this.updateSendButton())),this.initMobileInputAdaptation(),this.initLoginInputAdaptation(),document.getElementById("editTitleBtn").addEventListener("click",(()=>this.editSessionTitle())),document.getElementById("attachBtn").addEventListener("click",(()=>{document.getElementById("fileInput").click()})),document.getElementById("fileInput").addEventListener("change",(e=>this.handleFileUpload(e))),document.getElementById("thinkingToggle").addEventListener("change",(e=>{this.handleThinkingToggle(e)})),document.getElementById("settingsBtn").addEventListener("click",(()=>this.showAdminPanel())),document.getElementById("backToChatBtn").addEventListener("click",(()=>this.showChatPage())),document.querySelectorAll(".admin-tab-btn").forEach((e=>{e.addEventListener("click",(e=>this.switchAdminTab(e)))})),document.getElementById("addApiKeyBtn").addEventListener("click",(()=>this.showAddApiKeyModal())),document.getElementById("addUserBtn").addEventListener("click",(()=>this.showAddUserModal()));const e=document.getElementById("clearLogsBtn");e&&e.addEventListener("click",(()=>this.clearLogs()));const t=document.getElementById("closeSessionModal"),s=document.getElementById("closeSessionModalBtn");t&&t.addEventListener("click",(()=>{document.getElementById("sessionDetailModal").style.display="none"})),s&&s.addEventListener("click",(()=>{document.getElementById("sessionDetailModal").style.display="none"}));const i=document.getElementById("prevSessionsPage"),n=document.getElementById("nextSessionsPage");i&&i.addEventListener("click",(()=>this.changeSessionsPage(-1))),n&&n.addEventListener("click",(()=>this.changeSessionsPage(1)));const o=document.getElementById("sessionSearchInput");o&&o.addEventListener("input",(e=>this.searchSessionsAdmin(e.target.value)));const a=document.getElementById("refreshSessionsBtn");a&&a.addEventListener("click",(()=>this.loadSessionsAdmin())),document.getElementById("logoutBtn").addEventListener("click",(()=>this.logout())),document.getElementById("searchInput").addEventListener("input",(e=>this.searchSessions(e.target.value))),document.getElementById("modelSelect").addEventListener("change",(e=>this.updateModelDisplay(e)));const c=document.getElementById("voiceCallBtn");c&&c.addEventListener("click",(()=>this.showDevelopmentNotice("语音通话")));const r=document.getElementById("videoCallBtn");r&&r.addEventListener("click",(()=>this.showDevelopmentNotice("视频通话")));const d=document.getElementById("moreOptionsBtn");d&&d.addEventListener("click",(()=>this.toggleMobileSidebar()));const l=document.getElementById("mobileCloseBtn");l&&l.addEventListener("click",(()=>this.forceCloseSidebar())),document.querySelector(".close").addEventListener("click",(()=>this.closeModal())),document.getElementById("notificationClose").addEventListener("click",(()=>this.hideNotification())),window.addEventListener("click",(e=>{const t=document.getElementById("modal");e.target===t&&this.closeModal()}))}initMobileFeatures(){this.isMobile=window.innerWidth<=768,window.addEventListener("resize",(()=>{const e=this.isMobile;this.isMobile=window.innerWidth<=768,e!==this.isMobile&&this.handleMobileToggle()})),this.setupMobileSidebar(),this.setupTouchOptimizations()}setupMobileSidebar(){const e=document.querySelector(".sidebar"),t=(document.querySelector(".main-chat"),document.querySelector(".chat-header")),s=(document.querySelector(".model-selector"),document.getElementById("mobileSidebarToggle"));s&&s.remove();const i=document.createElement("button");if(i.id="mobileSidebarToggle",i.className="btn-icon",i.innerHTML='<i class="fas fa-bars"></i>',i.style.cssText="\n            width: auto;\n            height: auto;\n            padding: 8px 12px;\n            margin-right: 10px;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: transparent;\n            color: var(--text-primary);\n            border: none;\n        ",t){const e=t.querySelector(".chat-title");t.insertBefore(i,e)}const n=document.getElementById("mobileSidebarToggle");n&&n.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),setTimeout((()=>{this.toggleMobileSidebar()}),0)})),this.setupOutsideClickListener(),e&&e.addEventListener("click",(e=>{e.stopPropagation()}))}toggleMobileSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("mobileSidebarToggle");e&&setTimeout((()=>{const s=(e.getAttribute("class")||"").includes("mobile-open"),i=e.classList.contains("mobile-open"),n=window.getComputedStyle(e),o=n.transform&&(n.transform.includes("translateY(0")||"matrix(1, 0, 0, 1, 0, 0)"===n.transform)&&"1"===n.opacity;s||i||o?(e.classList.remove("mobile-open"),e.className=e.className.replace(/mobile-open/g,"").replace(/\s+/g," ").trim(),e.style.transform="",e.style.opacity="",e.style.visibility="",t&&(t.innerHTML='<i class="fas fa-bars"></i>')):(e.className="sidebar mobile-open",t&&(t.innerHTML='<i class="fas fa-times"></i>'),e.style.transform="translateY(0)",e.style.opacity="1",e.style.visibility="visible")}),5)}openMobileSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("mobileSidebarToggle");e&&e.classList.add("mobile-open"),t&&(t.innerHTML='<i class="fas fa-times"></i>')}closeMobileSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("mobileSidebarToggle");e&&(e.classList.remove("mobile-open"),t&&(t.innerHTML='<i class="fas fa-bars"></i>'))}forceCloseSidebar(){const e=document.querySelector(".sidebar"),t=document.getElementById("mobileSidebarToggle");e&&(e.classList.remove("mobile-open"),e.className="sidebar",e.style.transform="",e.style.opacity="",e.style.visibility=""),t&&(t.innerHTML='<i class="fas fa-bars"></i>')}addEmergencyCloseButton(){const e=document.getElementById("emergencyCloseBtn");e&&e.remove();const t=document.createElement("button");t.id="emergencyCloseBtn",t.innerHTML="✕ 关闭侧边栏",t.style.cssText="\n            position: fixed;\n            top: 10px;\n            right: 10px;\n            z-index: 9999;\n            background: #ff4444;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: bold;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            display: none;\n        ",t.addEventListener("click",(e=>{e.stopPropagation(),this.forceCloseSidebar()})),document.body.appendChild(t);const s=document.querySelector(".sidebar");if(s){new MutationObserver((()=>{s.classList.contains("mobile-open")?t.style.display="block":t.style.display="none"})).observe(s,{attributes:!0})}}setupOutsideClickListener(){this.outsideClickHandler&&document.removeEventListener("click",this.outsideClickHandler,!0),this.outsideClickHandler=e=>{const t=document.querySelector(".sidebar"),s=document.getElementById("mobileSidebarToggle");if(t){if((t.getAttribute("class")||"").includes("mobile-open")){let i=!1;if(t.contains(e.target)&&(i=!0),s){(s.contains(e.target)||s===e.target)&&(i=!0);const t=s.querySelector("i");t&&(t.contains(e.target)||t===e.target)&&(i=!0)}i||this.forceCloseSidebar()}}},document.addEventListener("click",this.outsideClickHandler,!0)}handleMobileToggle(){const e=document.querySelector(".sidebar");if(this.isMobile)this.setupMobileSidebar();else{const t=document.getElementById("mobileSidebarToggle");t&&t.remove(),e&&e.classList.remove("mobile-open"),this.outsideClickHandler&&(document.removeEventListener("click",this.outsideClickHandler,!0),this.outsideClickHandler=null)}}setupTouchOptimizations(){let e=0;if(document.addEventListener("touchend",(t=>{const s=(new Date).getTime();s-e<=300&&t.preventDefault(),e=s}),!1),this.isMobile){let e=0,t=0,s=0,i=0;document.addEventListener("touchstart",(s=>{e=s.touches[0].clientX,t=s.touches[0].clientY})),document.addEventListener("touchmove",(n=>{if(!e||!t)return;s=n.touches[0].clientX,i=n.touches[0].clientY;const o=e-s,a=t-i;if(Math.abs(o)>Math.abs(a)){const t=document.querySelector(".sidebar");o<-50&&e<50?this.openMobileSidebar():o>50&&t&&t.classList.contains("mobile-open")&&this.closeMobileSidebar()}})),document.addEventListener("touchend",(()=>{e=0,t=0,s=0,i=0}))}}async checkAuth(){try{const e=await this.apiCall("/auth/user");e.success?(this.currentUser=e.user,this.showChatPage(),this.loadSessions()):this.showLoginPage()}catch(e){this.showLoginPage()}}async apiCall(e,t={}){const s=`api${e}`,i="/chat/messages"===e&&"POST"===t.method,n=i||"/generate-image"===e?12e4:15e3,o={method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"},credentials:"same-origin",...t};o.body&&"object"==typeof o.body&&(o.body=JSON.stringify(o.body));const a=new AbortController,c=setTimeout((()=>a.abort()),n);o.signal=a.signal;try{const e=await fetch(s,o);if(clearTimeout(c),401===e.status)throw console.log("检测到登录过期，自动跳转到登录页面"),this.handleLoginExpired(),new Error("登录已过期，请重新登录");if(503===e.status)throw new Error("服务器繁忙，请稍后重试");if(504===e.status)throw new Error("请求超时，服务器响应过慢，请稍后重试");const t=e.headers.get("content-type");if(!t||!t.includes("application/json")){const t=await e.text();if(console.error("非JSON响应:",t),i&&""===t.trim())throw console.warn("响应为空，可能被截断，尝试重新加载消息..."),await new Promise((e=>setTimeout(e,1e3))),new Error("响应为空，请刷新页面查看消息");throw new Error("服务器返回了非JSON格式的响应")}let n;try{n=await e.json()}catch(e){if(console.error("JSON解析失败:",e),i)throw new Error("响应解析失败，消息可能已保存，请刷新页面查看");throw new Error("响应不是有效的JSON格式")}if(!e.ok)throw new Error(n.error||"请求失败");return n}catch(e){if(clearTimeout(c),"AbortError"===e.name)throw new Error(`请求超时（${n/1e3}秒），服务器响应过慢，请稍后重试`);if(e.message.includes("Failed to fetch")||e.message.includes("NetworkError"))throw new Error("网络连接失败，请检查网络后重试");throw e}}handleLoginExpired(){this.currentUser=null,this.currentSession=null,this.attachments=[],this.isLoading=!1,this.clearUserData(),this.resetAllUIElements(),this.showNotification("登录已过期，请重新登录","warning"),setTimeout((()=>{this.showLoginPage()}),1500)}showNotification(e,t="info"){const s=document.getElementById("notification"),i=document.getElementById("notificationText");s&&i?(i.textContent=e,s.className=`notification ${t}`,s.offsetHeight,setTimeout((()=>{s.classList.add("show")}),10),clearTimeout(this.notificationTimeout),this.notificationTimeout=setTimeout((()=>{this.hideNotification()}),4e3)):console.warn("Notification elements not found")}hideNotification(){const e=document.getElementById("notification");e&&e.classList.remove("show")}showPage(e){document.querySelectorAll(".page").forEach((e=>{e.classList.remove("active")})),document.getElementById(e).classList.add("active")}showLoginPage(){this.showPage("loginPage")}showChatPage(){if(this.showPage("chatPage"),this.currentUser){document.getElementById("currentUsername").textContent=this.currentUser.username;const e=document.getElementById("settingsBtn");this.currentUser.is_admin?e.style.display="flex":e.style.display="none",this.updateModelSelector(),this.resetChatInterface()}}resetChatInterface(){this.currentSession=null;const e=document.getElementById("currentSessionTitle");e&&(e.textContent="AI智能助手");const t=document.getElementById("editTitleBtn");t&&(t.style.display="none"),this.showWelcomeMessage();const s=document.getElementById("messageInput");s&&(s.value="",s.disabled=!1,s.placeholder="输入您的消息... (支持 Ctrl+V 粘贴图片)",s.style.pointerEvents="auto");const i=document.getElementById("sendBtn");i&&(i.disabled=!0,i.innerHTML='<i class="fas fa-paper-plane"></i>');const n=document.getElementById("attachBtn");n&&(n.disabled=!1),this.attachments=[],this.updateAttachmentPreview(),this.isLoading=!1,this.removeThinkingMessage()}updateModelSelector(){const e=document.getElementById("modelSelect"),t=e.querySelector('option[value="gemini-2.5-pro"]');this.currentUser&&!this.currentUser.can_use_pro?(t.disabled=!0,t.textContent="Wawa&Gemini Pro(需要Pro权限)","gemini-2.5-pro"===e.value&&(e.value="gemini-2.5-flash")):(t.disabled=!1,t.textContent="Wawa&Gemini Pro")}showAdminPanel(){this.currentUser&&this.currentUser.is_admin?(this.showPage("adminPage"),this.loadAdminData()):this.showNotification("权限不足","error")}switchAuthTab(e){const t=e.target.dataset.tab;document.querySelectorAll(".tab-btn").forEach((e=>{e.classList.remove("active")})),e.target.classList.add("active"),document.querySelectorAll(".auth-form").forEach((e=>{e.classList.remove("active")})),document.getElementById(`${t}Form`).classList.add("active")}async handleLogin(e){e.preventDefault();const t=document.getElementById("loginUsername").value,s=document.getElementById("loginPassword").value;if(t&&s)try{const e=await this.apiCall("/auth/login",{method:"POST",body:{username:t,password:s}});e.success?(this.currentUser=e.user,this.clearUserData(),this.showNotification("登录成功","success"),e.last_login_time&&setTimeout((()=>{const t=this.formatLastLoginTime(e.last_login_time);this.showNotification(`上次登录时间：${t}`,"info",5e3)}),1500),this.showChatPage(),setTimeout((()=>{this.loadSessions()}),100)):this.showNotification(e.message,"error")}catch(e){this.showNotification(e.message,"error")}else this.showNotification("请填写用户名和密码","error")}clearUserData(){this.currentSession=null,this.attachments=[],this.isLoading=!1;const e=document.getElementById("sessionList");e&&(e.innerHTML="");const t=document.getElementById("chatMessages");t&&(t.innerHTML=""),document.querySelectorAll('[data-is-temp="true"]').forEach((e=>{e.remove()})),this.removeThinkingMessage(),console.log("✅ 用户数据已清空")}async handleRegister(e){e.preventDefault();const t=document.getElementById("registerUsername").value,s=document.getElementById("registerEmail").value,i=document.getElementById("registerPassword").value,n=document.getElementById("confirmPassword").value;if(t&&i)if(i===n)try{const e=await this.apiCall("/auth/register",{method:"POST",body:{username:t,email:s,password:i}});e.success?(this.showNotification("注册成功，请登录","success"),document.querySelector('.tab-btn[data-tab="login"]').click(),document.getElementById("registerForm").reset()):this.showNotification(e.message,"error")}catch(e){this.showNotification(e.message,"error")}else this.showNotification("两次输入的密码不一致","error");else this.showNotification("请填写用户名和密码","error")}async logout(){try{await this.apiCall("/auth/logout"),this.clearUserData(),this.currentUser=null,this.resetAllUIElements(),this.showNotification("已退出登录","success"),this.showLoginPage()}catch(e){this.showNotification(e.message,"error")}}resetAllUIElements(){const e=document.getElementById("modelSelect");e&&(e.value="gemini-2.5-flash"),this.updateAttachmentPreview(),this.closeMobileSidebar(),console.log("✅ 所有UI元素已重置")}showDevelopmentNotice(e){this.showNotification(`🚧 ${e}功能正在开发中，敬请期待！`,"info")}updateModelDisplay(e){const t=e.target.value,s=document.getElementById("currentModelDisplay");if(s){const e={"gemini-2.5-flash":"Wawa&Gemin","gemini-2.5-pro":"Wawa&Gemin(Pro)"};s.textContent=e[t]||"Wawa&Gemin"}}async updateSessionListOnly(){try{const e=Date.now(),t=await this.apiCall(`/chat/sessions?_t=${e}`);t.success&&this.renderSessions(t.sessions||[])}catch(e){console.error("❌ 更新会话列表失败:",e)}}highlightCurrentSession(e){document.querySelectorAll(".session-item").forEach((e=>{e.classList.remove("active")}));const t=document.querySelector(`[data-session-id="${e}"]`);t&&t.classList.add("active"),this.closeMobileSidebar(),this.isMobile&&this.closeMobileSidebar()}async loadSessions(){try{const e=Date.now(),t=await this.apiCall(`/chat/sessions?_t=${e}`);t.success?this.renderSessions(t.sessions||[]):(console.error("❌ 加载会话失败:",t.error),this.showNotification("加载会话失败","error"))}catch(e){console.error("❌ 加载会话异常:",e),this.showNotification("加载会话失败","error")}}renderSessions(e){const t=document.getElementById("sessionList");t.innerHTML="",e&&0!==e.length&&e.forEach(((e,s)=>{const i=document.createElement("div");i.className="session-item",i.dataset.sessionId=e.id,this.currentSession&&this.currentSession.id==e.id&&i.classList.add("active"),i.addEventListener("click",(()=>this.selectSession(e))),i.innerHTML=`\n                <div class="session-item-title">${e.title}</div>\n                <div class="session-item-preview">${this.sanitizePreviewText(e.last_message||"暂无消息")}</div>\n                <div class="session-item-actions">\n                    <button class="session-delete-btn" onclick="event.stopPropagation(); app.deleteSession(${e.id});" title="删除">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                </div>\n            `,t.appendChild(i)}))}async createNewSession(){const e={id:"temp-"+Date.now(),title:"新对话",messages:[],isTemp:!0};this.selectSession(e),this.addTempSessionToList(e);try{const t=await this.apiCall("/chat/sessions",{method:"POST",body:{title:"新对话"}});if(t.success){const s={id:t.session_id,title:t.title,messages:[]};this.currentSession=s,document.getElementById("currentSessionTitle").textContent=s.title,this.removeTempSessionFromList(e.id),await this.updateSessionListOnly(),this.highlightCurrentSession(s.id)}else this.removeTempSessionFromList(e.id),this.showNotification("创建会话失败: "+(t.message||""),"error")}catch(t){this.removeTempSessionFromList(e.id),this.showNotification("创建会话失败","error")}}addTempSessionToList(e){const t=document.getElementById("sessionList"),s=document.createElement("div");s.className="session-item active",s.dataset.sessionId=e.id,s.dataset.isTemp="true",s.innerHTML=`\n            <div class="session-item-title">${e.title}</div>\n            <div class="session-item-preview">正在创建...</div>\n            <div class="session-item-actions">\n                <div class="session-loading">\n                    <i class="fas fa-spinner fa-spin"></i>\n                </div>\n            </div>\n        `,t.insertBefore(s,t.firstChild),document.querySelectorAll(".session-item").forEach((e=>{e!==s&&e.classList.remove("active")}))}removeTempSessionFromList(e){const t=document.querySelector(`[data-session-id="${e}"]`);t&&"true"===t.dataset.isTemp&&t.remove()}async selectSession(e){const t=this.currentSession?this.currentSession.id:null;if(this.isMobile&&t===e.id){if(document.getElementById("chatMessages").querySelectorAll(".message:not(.welcome-message)").length>0)return void this.closeMobileSidebar()}this.currentSession=e,document.getElementById("currentSessionTitle").textContent=e.title,document.getElementById("editTitleBtn").style.display="flex",document.querySelectorAll(".session-item").forEach((e=>{e.classList.remove("active")}));const s=document.querySelector(`[data-session-id="${e.id}"]`);s&&s.classList.add("active"),this.closeMobileSidebar(),e.isTemp||(this.showLoadingMessages(),await this.loadMessages(e.id))}async editSessionTitle(){if(!this.currentSession)return void this.showNotification("请先选择一个会话","error");const e=this.currentSession.title,t=prompt("请输入新的会话标题:",e);if(t&&""!==t.trim()&&t!==e)try{const e=await this.apiCall("/chat/session",{method:"PUT",body:{session_id:this.currentSession.id,title:t.trim()}});e.success?(this.currentSession.title=t.trim(),document.getElementById("currentSessionTitle").textContent=t.trim(),this.loadSessions(),this.showNotification("会话标题已更新","success")):this.showNotification(e.message||"更新标题失败","error")}catch(e){this.showNotification("更新标题失败: "+e.message,"error")}}async loadMessages(e){try{const t=await this.apiCall(`/chat/messages?session_id=${e}`);t.success?this.renderMessages(t.messages):this.showWelcomeMessage()}catch(e){this.showNotification("加载消息失败","error"),this.showWelcomeMessage()}}renderMessages(e){document.getElementById("chatMessages").innerHTML="",e&&0!==e.length?(e.forEach((e=>{this.addMessageToUI(e)})),this.scrollToBottom(),setTimeout((()=>{this.renderMathFormulas()}),10)):this.showWelcomeMessage()}showWelcomeMessage(){document.getElementById("chatMessages").innerHTML='\n            <div class="welcome-message">\n                <div class="welcome-icon">\n                    <i class="fas fa-robot"></i>\n                </div>\n                <h3>欢迎使用 WawaCloud AI 聊天助手</h3>\n                <p>我是娃娃团队旗下基于googleGemini训练开发的Ai助手</p>\n                <p>我可以帮助您解答问题、分析图片、处理文档等。开始新对话吧！</p>\n                <div class="feature-list">\n                    <div class="feature-item">\n                        <i class="fas fa-image"></i>\n                        <span>图片分析</span>\n                    </div>\n                    <div class="feature-item">\n                        <i class="fas fa-palette"></i>\n                        <span>AI绘图(开发中)</span>\n                    </div>\n                    <div class="feature-item">\n                        <i class="fas fa-brain"></i>\n                        <span>智能推理</span>\n                    </div>\n                    <div class="feature-item">\n                        <i class="fas fa-file-alt"></i>\n                        <span>文档处理</span>\n                    </div>\n                </div>\n\n            </div>\n        '}showLoadingMessages(){document.getElementById("chatMessages").innerHTML='\n            <div class="welcome-message">\n                <div class="welcome-icon">\n                    <i class="fas fa-spinner fa-spin"></i>\n                </div>\n                <h3>加载消息中...</h3>\n                <p>正在获取历史对话内容</p>\n            </div>\n        '}addMessageToUI(e){const t=document.getElementById("chatMessages"),s=t.querySelector(".welcome-message");s&&s.remove();const i=document.createElement("div");i.className=`message ${e.role}`;const n="user"===e.role?'<i class="fas fa-user"></i>':'<i class="fas fa-robot"></i>';let o="";e.attachments&&e.attachments.length>0&&(o='<div class="message-attachments">',e.attachments.forEach(((e,t)=>{const s=this.getFileIcon(e.category),i="images"===e.category;Date.now();o+=i?`\n                        <div class="image-attachment-container">\n                            <div class="attachment-item image-attachment" data-image-url="${e.url}" onclick="app.showImagePreview('${e.url}', '${e.name}')">\n                                <i class="${s}"></i>\n                                <span class="attachment-name">${e.name}</span>\n                                <i class="fas fa-search-plus preview-icon"></i>\n                            </div>\n                            <img class="image-thumbnail" src="${e.url}" alt="${e.name}" onclick="app.showImagePreview('${e.url}', '${e.name}')" onerror="this.style.display='none'">\n                        </div>\n                    `:`\n                        <div class="attachment-item">\n                            <i class="${s}"></i>\n                            <span>${e.name}</span>\n                        </div>\n                    `})),o+="</div>");const a=e.content.includes('<div class="generated-image">')||e.content.includes('<img src="data:')||e.content.includes('<div class="')||e.content.includes("<img ")||e.content.includes('<p class="')||e.content.includes('<span class="')?e.content:this.formatMessageText(e.content);i.innerHTML=`\n            <div class="message-avatar">${n}</div>\n            <div class="message-content">\n                ${o}\n                <div class="message-bubble">\n                    <div class="message-text">${a}</div>\n                    <div class="message-time">${this.formatTime(e.created_at)}</div>\n                </div>\n            </div>\n        `,t.appendChild(i),setTimeout((()=>{this.renderMathFormulas()}),10)}formatMessageText(e){return e=this.processCodeBlocks(e),e=(e=this.processMathFormulas(e)).replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/\n/g,"<br>")}processMathFormulas(e){return e=(e=e.replace(/(?<!\$)\$(?!\$)([^$\n]+?)\$(?!\$)/g,((e,t)=>'<span class="math-formula inline" id="'+("math-"+Date.now()+"-"+Math.random().toString(36).substr(2,9))+'" data-formula="'+this.escapeHtml(t)+'">$'+this.escapeHtml(t)+"$</span>"))).replace(/\$\$([\s\S]*?)\$\$/g,((e,t)=>'<div class="math-formula display" id="'+("math-"+Date.now()+"-"+Math.random().toString(36).substr(2,9))+'" data-formula="'+this.escapeHtml(t.trim())+'">$$'+this.escapeHtml(t.trim())+"$$</div>"))}renderMathFormulas(){document.querySelectorAll(".math-formula[data-formula]").forEach((e=>{const t=e.getAttribute("data-formula"),s=e.classList.contains("display");try{window.katex&&(katex.render(t,e,{displayMode:s,throwOnError:!1,strict:!1,trust:!1}),e.removeAttribute("data-formula"))}catch(e){console.warn("数学公式渲染失败:",e)}}))}processCodeBlocks(e){return e.replace(/```([a-zA-Z]*)(\r?\n)?([\s\S]*?)```/g,((e,t,s,i)=>{i=i.trim();const n=this.escapeHtml(i),o="code-block-"+Date.now()+"-"+Math.random().toString(36).substr(2,9);return'<div class="code-block-container" data-language="'+(t||"text")+'"><div class="code-block-header"><span class="code-language">'+(t||"Text")+'</span><div class="code-actions"><button class="code-action-btn" onclick="app.copyCodeBlock(\''+o+'\')" title="复制代码"><i class="fas fa-copy"></i></button><button class="code-action-btn" onclick="app.editCodeBlock(\''+o+"', '"+(t||"text")+'\')" title="编辑代码"><i class="fas fa-edit"></i></button><button class="code-action-btn" onclick="app.fullscreenCodeBlock(\''+o+'\')" title="全屏查看"><i class="fas fa-expand"></i></button></div></div><pre class="code-block" id="'+o+'"><code>'+n+"</code></pre></div>"}))}escapeHtml(e){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,(function(e){return t[e]}))}sanitizePreviewText(e){return e&&"string"==typeof e?((e=(e=(e=(e=e.replace(/```[\s\S]*?```/g,"[代码块]")).replace(/`[^`]*`/g,"[代码]")).replace(/<[^>]*>/g,"")).replace(/\s+/g," ").trim()).length>50&&(e=e.substring(0,50)+"..."),e||"暂无消息"):"暂无消息"}copyCodeBlock(e){const t=document.getElementById(e);if(t){const e=t.textContent;navigator.clipboard.writeText(e).then((()=>{this.showNotification("代码已复制到剪贴板","success")})).catch((()=>{const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),this.showNotification("代码已复制到剪贴板","success")}))}}editCodeBlock(e,t){const s=document.getElementById(e);if(s){const i=s.textContent;this.showCodeEditor(i,t,e)}}fullscreenCodeBlock(e){const t=document.getElementById(e);if(t){const e=t.textContent,s=t.closest(".code-block-container").dataset.language;this.showFullscreenCode(e,s)}}showCodeEditor(e,t,s){const i=document.createElement("div");i.className="code-editor-modal",i.innerHTML='<div class="code-editor-overlay" onclick="this.parentElement.remove()"></div><div class="code-editor-container"><div class="code-editor-header"><h3>编辑代码 - '+t.toUpperCase()+'</h3><button class="close-btn" onclick="this.closest(\'.code-editor-modal\').remove()"><i class="fas fa-times"></i></button></div><div class="code-editor-body"><textarea class="code-editor-textarea" placeholder="在此编辑代码...">'+this.escapeHtml(e)+'</textarea></div><div class="code-editor-actions"><button class="btn btn-secondary" onclick="this.closest(\'.code-editor-modal\').remove()">取消</button><button class="btn btn-primary" onclick="app.saveCodeEdit(\''+s+'\', this)">保存</button><button class="btn btn-success" onclick="app.copyFromEditor(this)">复制</button></div></div>',document.body.appendChild(i),setTimeout((()=>{i.querySelector(".code-editor-textarea").focus()}),100)}showFullscreenCode(e,t){const s=document.createElement("div");s.className="code-fullscreen-modal",s.innerHTML='<div class="code-fullscreen-overlay" onclick="this.parentElement.remove()"></div><div class="code-fullscreen-container"><div class="code-fullscreen-header"><h3>'+t.toUpperCase()+' 代码</h3><div class="code-fullscreen-actions"><button class="code-action-btn" onclick="app.copyFromFullscreen(this)" title="复制代码"><i class="fas fa-copy"></i> 复制</button><button class="close-btn" onclick="this.closest(\'.code-fullscreen-modal\').remove()" title="关闭"><i class="fas fa-times"></i></button></div></div><div class="code-fullscreen-body"><pre class="code-fullscreen-block"><code>'+this.escapeHtml(e)+"</code></pre></div></div>",document.body.appendChild(s)}saveCodeEdit(e,t){const s=t.closest(".code-editor-modal"),i=s.querySelector(".code-editor-textarea").value,n=document.getElementById(e);n&&(n.textContent=i),s.remove(),this.showNotification("代码已更新","success")}copyFromEditor(e){const t=e.closest(".code-editor-modal").querySelector(".code-editor-textarea"),s=t.value;navigator.clipboard.writeText(s).then((()=>{this.showNotification("代码已复制到剪贴板","success")})).catch((()=>{t.select(),document.execCommand("copy"),this.showNotification("代码已复制到剪贴板","success")}))}copyFromFullscreen(e){const t=e.closest(".code-fullscreen-modal").querySelector(".code-fullscreen-block").textContent;navigator.clipboard.writeText(t).then((()=>{this.showNotification("代码已复制到剪贴板","success")})).catch((()=>{const e=document.createElement("textarea");e.value=t,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),this.showNotification("代码已复制到剪贴板","success")}))}async sendMessage(){if(this.isLoading)return;this.isLoading=!0,this.updateSendButton(),this.disableUserInput(!0);const e=document.getElementById("messageInput"),t=e.value.trim();if(!t&&0===this.attachments.length)return this.showNotification("请输入消息内容","error"),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1);if(t.startsWith("/image ")||t.startsWith("/图片 ")){const e=t.replace(/^\/(image|图片)\s+/,"").trim();return e?(await this.generateImage(e),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1)):(this.showNotification("请输入图片描述，例如：/image 一只可爱的猫","error"),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1))}const s=t.toLowerCase();if(["画","绘","生成图片","画个","画一","画张","生成一张","给我画","帮我画","draw","paint","generate image","create image","make a picture"].some((e=>s.includes(e)||t.includes(e)))&&!t.startsWith("/")){let e=t;if(e=e.replace(/^(请|帮我|给我|能不能|可以|可否)*(画|绘|生成|创建)*(一个|一张|个|张)*/,"").trim(),e)return this.showNotification("🎨 正在为您生成图片...","info",3e3),await this.generateImage(e),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1)}if(this.attachments.length>0){let e=0;const t=this.attachments.filter((e=>"images"===e.category||["jpg","jpeg","png","gif","webp"].includes(e.path.split(".").pop().toLowerCase())));for(const s of t)s.size&&(e+=s.size);const s=e/1048576;if(s>10)return this.showNotification(`❌ 图片过大（${s.toFixed(2)}MB），请到 https://tool.wawacm.com/pic.html 压缩后再上传！`,"error",8e3),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1);s>5&&this.showNotification(`⚠️ 图片较大（${s.toFixed(2)}MB），可能会造成上传缓慢`,"warning",5e3)}if(!this.currentSession&&(await this.createNewSession(),!this.currentSession))return this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1);let i=null;try{const s=document.getElementById("modelSelect").value;if("gemini-2.5-pro"===s&&this.currentUser&&!this.currentUser.can_use_pro)return this.showNotification("您没有Pro访问权限，无法使用Pro模型","error"),this.isLoading=!1,this.updateSendButton(),void this.disableUserInput(!1);this.addMessageToUI({role:"user",content:t,attachments:this.attachments.length>0?[...this.attachments]:void 0,created_at:(new Date).toISOString()}),i=this.addThinkingMessage();const n=[...this.attachments];e.value="",this.attachments=[],this.updateAttachmentPreview(),this.scrollToBottom();const o=document.getElementById("thinkingToggle"),a=o&&o.checked,c=await this.apiCall("/chat/messages",{method:"POST",body:{session_id:this.currentSession.id,message:t,model:s,attachments:n,enable_thinking:a}});if(this.removeThinkingMessage(i),c.success){this.addMessageToUI({role:"assistant",content:c.content,created_at:(new Date).toISOString()}),this.scrollToBottom();let e=100;if(this.isMobile){const t=window.innerHeight;if(t>=900)return;if(t>=800)return;e=t>=700?2e3:1500}if(setTimeout((()=>{this.isMobile?this.updateSessionListOnly():this.loadSessions()}),e),c.context_warning){const e=(c.estimated_tokens||0).toLocaleString();this.showNotification(`⚠️ 上下文较长（约${e} tokens），建议开启新对话以获得更好的回复质量。`,"warning")}}else if(c.context_too_long){const e=c.estimated_tokens||0,t=c.limit||0,s=e.toLocaleString(),i=t.toLocaleString();this.showNotification(`❌ ${c.error}\n当前: ${s} tokens\n限制: ${i} tokens\n\n点击左上角"+"号创建新对话`,"error")}else c.is_thinking?this.showNotification("⏳ "+c.error,"warning"):this.showNotification(c.error,"error")}catch(e){this.showNotification(e.message,"error"),e.message.includes("刷新页面查看")&&(console.log("检测到响应丢失，自动重新加载最新消息..."),setTimeout((async()=>{try{await this.loadMessages(this.currentSession.id),this.showNotification("✅ 消息已自动加载","success",2e3)}catch(e){console.error("重新加载消息失败:",e)}}),1500))}finally{i&&this.removeThinkingMessage(i),this.isLoading=!1,this.updateSendButton(),this.disableUserInput(!1)}}updateSendButton(){const e=document.getElementById("sendBtn"),t=document.getElementById("messageInput").value.trim()||this.attachments.length>0;e.disabled=this.isLoading||!t,this.isLoading?e.innerHTML='<div class="loading"></div>':e.innerHTML='<i class="fas fa-paper-plane"></i>'}disableUserInput(e){const t=document.getElementById("messageInput"),s=document.getElementById("sendBtn"),i=document.getElementById("attachBtn");e?(t.disabled=!0,t.placeholder="模型正在思考中，请稍等...",s.disabled=!0,i.disabled=!0,t.style.pointerEvents="none"):(t.disabled=!1,t.placeholder="输入您的消息... (支持 Ctrl+V 粘贴图片)",s.disabled=!1,i.disabled=!1,t.style.pointerEvents="auto",setTimeout((()=>{t.focus()}),100))}addThinkingMessage(){const e=document.getElementById("chatMessages"),t=document.createElement("div");t.className="message assistant thinking-message";const s="thinking-"+Date.now();t.id=s,t.innerHTML='\n            <div class="message-avatar"><i class="fas fa-robot"></i></div>\n            <div class="message-content">\n                <div class="message-bubble">\n                    <div class="message-text">\n                        <div class="thinking-animation">\n                            <span class="thinking-text">正在思考...</span>\n                            <span class="thinking-dots">\n                                <span class="dot">.</span>\n                                <span class="dot">.</span>\n                                <span class="dot">.</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',e.appendChild(t),this.scrollToBottom();const i=t.querySelector(".thinking-text"),n=setTimeout((()=>{document.getElementById(s)&&(i.textContent="我还在思考中，请稍等...",this.scrollToBottom())}),1e4),o=setTimeout((()=>{document.getElementById(s)&&(i.textContent="当前问题有点复杂，请稍等...",this.scrollToBottom())}),2e4),a=setTimeout((()=>{document.getElementById(s)&&(i.textContent="由于网络问题，我卡了，请刷新并且尝试重新提问，抱歉!",i.style.color="#ef4444",this.scrollToBottom())}),3e4);return t.thinkingTimers=[n,o,a],s}removeThinkingMessage(e=null){if(e){const t=document.getElementById(e);t&&(t.thinkingTimers&&t.thinkingTimers.forEach((e=>clearTimeout(e))),t.remove())}else{document.querySelectorAll(".thinking-message").forEach((e=>{e.thinkingTimers&&e.thinkingTimers.forEach((e=>clearTimeout(e))),e.remove()}))}}initThinkingButton(){const e=document.getElementById("thinkingToggle"),t=document.getElementById("thinkingToggleLabel");e&&t&&(e.checked=!1,t.classList.remove("checked"))}handleThinkingToggle(e){const t=e.target,s=t.closest(".thinking-toggle-label");t.checked?(s.classList.add("checked"),this.showNotification("✨ 已启用深度思考功能，回答质量将更高但可能需要更多时间","success",3e3)):(s.classList.remove("checked"),this.showNotification("⚡ 已关闭深度思考功能，将使用快速响应模式","info",2e3))}async compressImageIfNeeded(e){try{const t=e.name||"image",s=t.split(".").pop().toLowerCase();if(!(e.type&&e.type.startsWith("image/")||["jpg","jpeg","png","gif","webp","heic","heif"].includes(s))||e.size<=2097152)return e;if(e.type&&(e.type.includes("heic")||e.type.includes("heif"))||"heic"===s||"heif"===s)if(window.heic2any)try{const s=await window.heic2any({blob:e,toType:"image/jpeg",quality:.8}),i=Array.isArray(s)?s[0]:s;return new File([i],t.replace(/\.[^\.]+$/,".jpg"),{type:"image/jpeg"})}catch(e){console.warn("HEIC转换失败，使用原文件",e)}else console.warn("HEIC转换库未加载，使用原文件");const i=await new Promise(((t,s)=>{const i=new FileReader;i.onload=()=>t(i.result),i.onerror=s,i.readAsDataURL(e)})),n=await new Promise(((e,t)=>{const s=new Image;s.onload=()=>e(s),s.onerror=t,s.src=i})),o=document.createElement("canvas"),a=o.getContext("2d");let c=n.naturalWidth||n.width,r=n.naturalHeight||n.height,d=1;const l=e.size/1048576;d=l>8?.5:l>5?.6:l>3?.7:.8;const m=Math.floor(c*d),h=Math.floor(r*d);o.width=m,o.height=h;("image/png"===e.type||"png"===s)&&(a.fillStyle="#ffffff",a.fillRect(0,0,m,h)),a.drawImage(n,0,0,m,h);let u=.8;l>8?u=.6:l>5&&(u=.7);const g=await new Promise((e=>o.toBlob(e,"image/jpeg",u)));if(!g)return e;if(g.size>=e.size)return console.info("压缩后文件更大，使用原文件",{originalBytes:e.size,compressedBytes:g.size,originalName:t}),e;const p=t.replace(/\.[^\.]+$/,".jpg"),y=new File([g],p,{type:"image/jpeg"});return console.info("压缩完成",{originalBytes:e.size,compressedBytes:y.size,compressionRatio:((e.size-y.size)/e.size*100).toFixed(1)+"%",originalSize:`${(e.size/1048576).toFixed(2)}MB`,compressedSize:`${(y.size/1048576).toFixed(2)}MB`,originalName:t,newName:p,scale:`${(100*d).toFixed(0)}%`,quality:u}),y}catch(t){return console.warn("压缩失败，使用原文件",t),e}}setUploadProgress(e){const t=document.getElementById("sendBtn");if(!t)return;if(null==e)return t.classList.remove("uploading"),void(t.innerHTML='<i class="fas fa-paper-plane"></i>');t.classList.add("uploading");const s=Math.max(0,Math.min(100,Math.round(e)));t.innerHTML=`<span class="progress-text">${s}%</span>`}async uploadToS4(e,t="images"){console.group("S4直传"),console.debug("准备上传文件",{name:e.name,type:e.type,size:e.size,category:t});const s={filename:e.name||"upload.jpg",content_type:e.type||"application/octet-stream",category:t};console.debug("请求预签名 payload",s);const i=await this.apiCall("/s4/presign",{method:"POST",body:s});if(console.debug("预签名返回",i),!i||!i.success)throw console.error("S4 预签名失败",i),console.groupEnd("S4直传"),new Error(i&&i.error||"S4 预签名失败");const n=new FormData;Object.entries(i.fields).forEach((([e,t])=>n.append(e,t))),n.append("file",e),console.debug("POST 目标",i.url),console.debug("POST 字段",i.fields);const o=await new Promise(((e,t)=>{try{const s=new XMLHttpRequest;s.open("POST",i.url,!0),s.onload=()=>{e({status:s.status,ok:201===s.status||s.status>=200&&s.status<300,text:s.responseText})},s.onerror=()=>t(new Error("S4 网络错误")),s.upload.onprogress=e=>{if(e.lengthComputable){const t=e.loaded/e.total*100;this.setUploadProgress(t)}},s.send(n)}catch(e){t(e)}}));if(console.debug("S4 响应状态",o.status,o.ok),console.debug("S4 响应文本",(o.text||"").slice(0,500)),this.setUploadProgress(null),!o.ok)throw console.error("S4 上传失败",{status:o.status,ok:o.ok}),console.groupEnd("S4直传"),new Error("S4 上传失败");const a=i.public_url_cdn||i.public_url_hosted||i.public_url,c={name:e.name,path:null,url:a,size:e.size,type:e.type||"image/jpeg",category:t,source:"s4",key:i.key,bucket:i.bucket};return console.info("S4 上传成功，附件对象",c),console.groupEnd("S4直传"),c}async handleFileUpload(e){const t=Array.from(e.target.files);for(const e of t)try{const t=10485760;if(e.size>t){this.showNotification(`文件 "${e.name}" 过大，最大支持 10MB`,"error");continue}const s=["jpg","jpeg","png","gif","webp","heic","heif","pdf","doc","docx","ppt","pptx","txt","rtf","mp4","avi","mov"],i=e.name.split(".").pop().toLowerCase();if(!s.includes(i)){this.showNotification(`不支持的文件类型: ${i}`,"error");continue}const n=e.type&&e.type.startsWith("image/")||["jpg","jpeg","png","gif","webp","heic","heif"].includes(i)?await this.compressImageIfNeeded(e):e;try{const e=["jpg","jpeg","png","gif","webp","heic","heif"],t=["mp4","avi","mov","wmv","flv"],s=n.type&&n.type.startsWith("image/")||e.includes(i)?"images":t.includes(i)?"videos":"documents",o=await this.uploadToS4(n,s);console.info("选择文件：S4上传成功",o),this.attachments.push(o),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 文件已上传到 OSS","success")}catch(e){console.error("选择文件：S4上传失败，回退到本地",e);const t=new FormData;t.append("file",n);try{const e=await fetch("api/upload",{method:"POST",body:t}),s=await e.json();if(s.success){const e={...s.file,source:"local"};console.info("选择文件：回退本地上传成功",e),this.attachments.push(e),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 文件上传成功","success")}else console.error("选择文件：回退本地上传失败",s),this.showNotification(`❌ 文件上传失败: ${s.message||s.error}`,"error")}catch(e){this.showNotification(`❌ 文件上传失败: ${e.message}`,"error")}}}catch(e){this.showNotification(`文件上传失败: ${e.message}`,"error")}e.target.value=""}updateAttachmentPreview(){const e=document.getElementById("attachmentPreview");if(0===this.attachments.length)return e.style.display="none",void(e.innerHTML="");e.style.display="flex",e.innerHTML="",this.attachments.forEach(((t,s)=>{const i=document.createElement("div"),n="images"===t.category;i.className=n?"attachment-item image-attachment-preview":"attachment-item";const o=this.getFileIcon(t.category);i.innerHTML=n?`\n                    <i class="${o}"></i>\n                    <span class="attachment-name" onclick="app.showImagePreview('${t.url}', '${t.name}')" style="cursor: pointer;">${t.name}</span>\n                    <i class="fas fa-eye preview-icon-small" onclick="app.showImagePreview('${t.url}', '${t.name}')" style="cursor: pointer;" title="预览图片"></i>\n                    <button class="attachment-remove" onclick="app.removeAttachment(${s})">&times;</button>\n                `:`\n                    <i class="${o}"></i>\n                    <span>${t.name}</span>\n                    <button class="attachment-remove" onclick="app.removeAttachment(${s})">&times;</button>\n                `,e.appendChild(i)})),this.updateSendButton()}async removeAttachment(e){const t=this.attachments[e];if(t&&"s4"===t.source&&t.key)try{const e=await this.apiCall("/s4/delete",{method:"POST",body:{key:t.key}});e&&e.success?this.showNotification("✅ 已从OSS删除该文件","success"):this.showNotification(`⚠️ OSS删除失败：${e.error||"未知错误"}`,"warning")}catch(e){this.showNotification(`❌ OSS删除失败：${e.message}`,"error")}this.attachments.splice(e,1),this.updateAttachmentPreview(),this.updateSendButton()}getFileIcon(e){return{images:"fas fa-image",videos:"fas fa-video",documents:"fas fa-file-alt"}[e]||"fas fa-file"}async searchSessions(e){if(e.trim())try{const t=await this.apiCall(`/chat/search?keyword=${encodeURIComponent(e)}`);if(t.success){const e=t.messages.reduce(((e,t)=>(e.find((e=>e.id===t.session_id))||e.push({id:t.session_id,title:t.session_title,last_message:t.content,updated_at:t.created_at}),e)),[]);this.renderSessions(e)}}catch(e){this.showNotification("搜索失败","error")}else this.loadSessions()}switchAdminTab(e){const t=e.target.dataset.tab;document.querySelectorAll(".admin-tab-btn").forEach((e=>{e.classList.remove("active")})),e.target.classList.add("active"),document.querySelectorAll(".admin-tab-content").forEach((e=>{e.classList.remove("active")})),document.getElementById(`${t}Tab`).classList.add("active"),this.loadAdminTabData(t)}async loadAdminData(){await this.loadAdminTabData("dashboard")}async loadAdminTabData(e){switch(e){case"dashboard":await this.loadDashboardStats();break;case"api-keys":await this.loadApiKeys();break;case"users":await this.loadUsers();break;case"sessions":await this.loadSessionsAdmin();break;case"settings":await this.loadSystemSettings();break;case"logs":await this.loadLogs()}}async loadDashboardStats(){try{const e=await this.apiCall("/admin/stats");if(e.success){const t=e.stats;document.getElementById("totalUsers").textContent=t.total_users||0,document.getElementById("totalCalls").textContent=t.total_calls||0,document.getElementById("todayCalls").textContent=t.today_calls||0,document.getElementById("avgResponseTime").textContent=t.avg_response_time?`${Math.round(1e3*t.avg_response_time)}ms`:"0ms"}}catch(e){this.showNotification("加载统计数据失败","error")}}async loadApiKeys(){try{const e=await this.apiCall("/admin/api-keys");e.success&&this.renderApiKeys(e.api_keys)}catch(e){this.showNotification("加载API密钥失败","error")}}renderApiKeys(e){const t=document.querySelector("#apiKeysTable tbody");t.innerHTML="",e.forEach((e=>{const s=document.createElement("tr");s.innerHTML=`\n                <td>${e.name}</td>\n                <td>${e.api_key.substring(0,20)}...</td>\n                <td><span class="status-badge ${e.is_active?"active":"inactive"}">${e.is_active?"启用":"禁用"}</span></td>\n                <td>${e.pro_rate_limit||10}/分钟</td>\n                <td>${e.usage_count||0}</td>\n                <td>${e.last_used?this.formatTime(e.last_used):"从未使用"}</td>\n                <td>\n                    <button class="btn-icon" onclick="app.editApiKey(${e.id})" title="编辑">\n                        <i class="fas fa-edit"></i>\n                    </button>\n                    <button class="btn-icon" onclick="app.deleteApiKey(${e.id})" title="删除">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                </td>\n            `,t.appendChild(s)}))}async loadUsers(){try{const e=await this.apiCall("/admin/users");e.success&&this.renderUsers(e.users)}catch(e){this.showNotification("加载用户列表失败","error")}}renderUsers(e){const t=document.querySelector("#usersTable tbody");t.innerHTML="",e.forEach((e=>{const s=document.createElement("tr");s.innerHTML=`\n                <td>${e.username}</td>\n                <td>${e.email||"未设置"}</td>\n                <td><span class="status-badge ${e.is_admin?"active":"inactive"}">${e.is_admin?"是":"否"}</span></td>\n                <td><span class="status-badge ${e.can_use_pro?"active":"inactive"}">${e.can_use_pro?"是":"否"}</span></td>\n                <td>${this.formatTime(e.created_at)}</td>\n                <td>\n                    <button class="btn-icon" onclick="app.editUser(${e.id})" title="编辑用户">\n                        <i class="fas fa-edit"></i>\n                    </button>\n                    <button class="btn-icon" onclick="app.toggleUserAdmin(${e.id})" title="切换管理员状态">\n                        <i class="fas fa-user-shield"></i>\n                    </button>\n                    <button class="btn-icon" onclick="app.toggleUserPro(${e.id})" title="切换Pro访问权限">\n                        <i class="fas fa-star"></i>\n                    </button>\n                    <button class="btn-icon" onclick="app.deleteUser(${e.id})" title="删除用户">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                </td>\n            `,t.appendChild(s)}))}async loadLogs(){try{const e=await this.apiCall("/admin/logs");e.success&&this.renderLogs(e.logs)}catch(e){this.showNotification("加载日志失败","error")}}renderLogs(e){const t=document.querySelector("#logsTable tbody");t.innerHTML="",e&&0!==e.length?e.forEach((e=>{const s=document.createElement("tr");s.innerHTML=`\n                <td>${this.formatTime(e.created_at)}</td>\n                <td>${e.api_key_name||"未知密钥"}</td>\n                <td>${e.username||"未知用户"}</td>\n                <td>${e.model}</td>\n                <td>${e.total_tokens||0}</td>\n                <td>${Math.round(1e3*e.response_time)}ms</td>\n                <td><span class="badge ${"success"===e.status?"success":"error"}">${"success"===e.status?"成功":"失败"}</span></td>\n            `,t.appendChild(s)})):t.innerHTML='<tr><td colspan="7" style="text-align: center; padding: 40px; color: var(--text-muted);">暂无调用日志</td></tr>'}async clearLogs(){if(confirm("确定要清空所有 API 调用日志吗？此操作不可恢复！"))try{const e=await this.apiCall("/admin/logs",{method:"DELETE"});e.success?(this.showNotification("日志已清空","success"),await this.loadLogs()):this.showNotification(e.message||"清空日志失败","error")}catch(e){this.showNotification("清空日志失败: "+e.message,"error")}}async loadSessionsAdmin(){this.sessionsPagination={currentPage:1,limit:20,offset:0},this.sessionsSearchKeyword="",await this.loadSessionsAdminWithPagination()}renderSessionsAdmin(e){const t=document.querySelector("#sessionsTable tbody");t&&(t.innerHTML="",e.forEach((e=>{const s=document.createElement("tr");s.innerHTML=`\n                <td>${e.id}</td>\n                <td>${e.username||"未知用户"}</td>\n                <td>${e.title||"无标题"}</td>\n                <td>${e.message_count||0}</td>\n                <td>${e.last_message?this.truncateText(e.last_message,50):"无消息"}</td>\n                <td>${this.formatTime(e.created_at)}</td>\n                <td>${this.formatTime(e.updated_at)}</td>\n                <td>\n                    <button class="btn-small btn-primary" onclick="app.showSessionDetail(${e.id})">\n                        <i class="fas fa-eye"></i> 查看\n                    </button>\n                    <button class="btn-small btn-danger" onclick="app.deleteSessionAdmin(${e.id})">\n                        <i class="fas fa-trash"></i> 删除\n                    </button>\n                </td>\n            `,t.appendChild(s)})))}updateSessionsPagination(e,t,s){const i=Math.floor(s/t)+1,n=Math.ceil(e/t);this.sessionsPagination&&(this.sessionsPagination.currentPage=i,this.sessionsPagination.totalPages=n);const o=document.getElementById("sessionsPageInfo"),a=document.getElementById("prevSessionsPage"),c=document.getElementById("nextSessionsPage");o&&(o.textContent=`第 ${i} 页，共 ${n} 页`),a&&(a.disabled=i<=1),c&&(c.disabled=i>=n)}async showSessionDetail(e){try{const t=await this.apiCall(`/admin/session?session_id=${e}`);t.success?this.displaySessionDetail(t.session,t.messages):this.showNotification("获取会话详情失败","error")}catch(e){this.showNotification("获取会话详情失败: "+e.message,"error")}}displaySessionDetail(e,t){document.getElementById("modalSessionId").textContent=e.id,document.getElementById("modalSessionUser").textContent=e.username||"未知用户",document.getElementById("modalSessionTitle").textContent=e.title||"无标题",document.getElementById("modalSessionMessageCount").textContent=t.length,document.getElementById("modalSessionCreated").textContent=this.formatTime(e.created_at);const s=document.getElementById("modalMessagesList");s.innerHTML="",t.forEach((e=>{const t=document.createElement("div");t.className=`message-item ${e.role}`;const i="user"===e.role?"用户":"AI",n=this.formatTime(e.created_at);t.innerHTML=`\n                <div class="message-header">\n                    <span class="message-role">${i}</span>\n                    <span class="message-time">${n}</span>\n                </div>\n                <div class="message-content">${this.formatMessageContent(e.content)}</div>\n            `,s.appendChild(t)}));document.getElementById("deleteSessionBtn").onclick=()=>this.deleteSessionAdmin(e.id),document.getElementById("sessionDetailModal").style.display="flex"}async deleteSessionAdmin(e){if(confirm("确定要删除这个会话吗？此操作不可恢复！"))try{const t=await this.apiCall(`/admin/session?session_id=${e}`,{method:"DELETE"});t.success?(this.showNotification("会话删除成功","success"),document.getElementById("sessionDetailModal").style.display="none",await this.loadSessionsAdmin()):this.showNotification(t.error||"删除会话失败","error")}catch(e){this.showNotification("删除会话失败: "+e.message,"error")}}truncateText(e,t){return e?e.length>t?e.substring(0,t)+"...":e:""}formatMessageContent(e){return e?e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\n/g,"<br>"):""}formatLastLoginTime(e){if(!e)return"首次登录";try{const t=new Date(e),s=new Date-t;if(isNaN(t.getTime())||s<0)return"首次登录";const i=Math.floor(s/864e5),n=Math.floor(s/36e5),o=Math.floor(s/6e4);return i>0?`${i}天前 (${t.toLocaleString("zh-CN")})`:n>0?`${n}小时前 (${t.toLocaleString("zh-CN")})`:o>0?`${o}分钟前 (${t.toLocaleString("zh-CN")})`:"刚刚 (本次登录)"}catch(e){return console.warn("格式化登录时间失败:",e),"首次登录"}}changeSessionsPage(e){this.sessionsPagination||(this.sessionsPagination={currentPage:1,limit:20,offset:0});const t=this.sessionsPagination.offset+e*this.sessionsPagination.limit;t>=0&&(this.sessionsPagination.offset=t,this.loadSessionsAdminWithPagination())}async loadSessionsAdminWithPagination(){try{const e=new URLSearchParams({limit:this.sessionsPagination.limit,offset:this.sessionsPagination.offset});this.sessionsSearchKeyword&&e.append("search",this.sessionsSearchKeyword);const t=await this.apiCall(`/admin/sessions?${e}`);t.success?(this.renderSessionsAdmin(t.sessions),this.updateSessionsPagination(t.total,t.limit,t.offset)):this.showNotification("加载会话列表失败","error")}catch(e){this.showNotification("加载会话列表失败: "+e.message,"error")}}async searchSessionsAdmin(e){this.sessionsSearchKeyword=e,this.sessionsPagination={currentPage:1,limit:20,offset:0},await this.loadSessionsAdminWithPagination()}formatTime(e){let t;if("string"==typeof e){if(t=new Date(e),isNaN(t.getTime())){const s=parseInt(e);if(isNaN(s))return console.warn("时间戳格式无效:",e),"时间无效";t=new Date(s<1e10?1e3*s:s)}}else{if("number"!=typeof e)return console.warn("时间戳类型无效:",typeof e,e),"时间无效";t=new Date(e<1e10?1e3*e:e)}if(isNaN(t.getTime()))return console.warn("解析后的日期无效:",e),"时间无效";const s=new Date-t;if(s<0){if(Math.abs(s)<36e5){const e=Math.abs(s);if(e<6e4)return"刚刚";if(e<36e5)return`${Math.floor(e/6e4)}分钟前`}return t.toLocaleString("zh-CN")}return s<6e4?"刚刚":s<36e5?`${Math.floor(s/6e4)}分钟前`:s<864e5?`${Math.floor(s/36e5)}小时前`:t.toLocaleDateString("zh-CN",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})}scrollToBottom(){const e=document.getElementById("chatMessages");e.scrollTop=e.scrollHeight}autoResizeTextarea(){document.getElementById("messageInput").addEventListener("input",(function(){this.style.height="auto",this.style.height=Math.min(this.scrollHeight,120)+"px"}))}initPasteAndDrop(){const e=document.getElementById("chatMessages"),t=document.getElementById("messageInput"),s=document.querySelector(".input-wrapper"),i=document.querySelector(".chat-input-container");t.addEventListener("paste",(e=>this.handlePaste(e))),e.addEventListener("paste",(e=>this.handlePaste(e)));[e,i,s].forEach((e=>{["dragenter","dragover","dragleave","drop"].forEach((t=>{e.addEventListener(t,(e=>{e.preventDefault(),e.stopPropagation()}),!1)})),e.addEventListener("dragenter",(t=>{e.classList.add("drag-over")})),e.addEventListener("dragover",(t=>{e.classList.add("drag-over")})),e.addEventListener("dragleave",(t=>{t.target===e&&e.classList.remove("drag-over")})),e.addEventListener("drop",(t=>{e.classList.remove("drag-over"),this.handleDrop(t)}))})),window.addEventListener("dragover",(e=>{e.preventDefault()}),!1),window.addEventListener("drop",(e=>{e.preventDefault()}),!1)}handlePaste(e){const t=e.clipboardData?.items;if(!t)return;let s=!1;for(let i=0;i<t.length;i++){const n=t[i];if(-1!==n.type.indexOf("image")){s=!0,e.preventDefault();const t=n.getAsFile();t&&this.uploadPastedImage(t);break}}s&&this.showNotification("📋 正在上传粘贴的图片...","info")}handleDrop(e){const t=e.dataTransfer?.files;t&&0!==t.length&&(this.showNotification(`📤 正在上传 ${t.length} 个文件...`,"info"),Array.from(t).forEach((e=>{this.uploadDroppedFile(e)})))}async uploadPastedImage(e){const t=(new Date).getTime(),s=new File([e],`pasted-image-${t}.png`,{type:e.type});if(s.size>10485760)return void this.showNotification("❌ 图片过大，最大支持 10MB","error");const i=await this.compressImageIfNeeded(s);try{const e=await this.uploadToS4(i,"images");console.info("粘贴图片：S4上传成功",e),this.attachments.push(e),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 图片已上传到 OSS","success")}catch(e){const t=new FormData;t.append("file",i);try{const e=await fetch("api/upload",{method:"POST",body:t}),s=await e.json();if(s.success){const e={...s.file,source:"local"};console.info("粘贴图片：回退本地上传成功",e),this.attachments.push(e),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 图片上传成功","success")}else console.error("粘贴图片：回退本地上传失败",s),this.showNotification(`❌ 图片上传失败: ${s.message||s.error}`,"error")}catch(e){console.error("粘贴图片：本地上传异常",e),this.showNotification(`❌ 图片上传失败: ${e.message}`,"error")}}}async uploadDroppedFile(e){if(e.size>10485760)return void this.showNotification(`❌ 文件 "${e.name}" 过大，最大支持 10MB`,"error");const t=e.name.split(".").pop().toLowerCase();if(!["jpg","jpeg","png","gif","webp","heic","heif","pdf","doc","docx","ppt","pptx","txt","rtf","mp4","avi","mov"].includes(t))return void this.showNotification(`❌ 不支持的文件类型: ${t}`,"error");const s=e.type&&e.type.startsWith("image/")||["jpg","jpeg","png","gif","webp","heic","heif"].includes(t)?await this.compressImageIfNeeded(e):e;try{const e=["jpg","jpeg","png","gif","webp","heic","heif"],i=["mp4","avi","mov","wmv","flv"],n=s.type&&s.type.startsWith("image/")||e.includes(t)?"images":i.includes(t)?"videos":"documents",o=await this.uploadToS4(s,n);console.info("拖拽文件：S4上传成功",o),this.attachments.push(o),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 文件已上传到 OSS","success")}catch(e){console.error("拖拽文件：S4上传失败，回退到本地",e);const t=new FormData;t.append("file",s);try{const e=await fetch("api/upload",{method:"POST",body:t}),s=await e.json();if(s.success){const e={...s.file,source:"local"};console.info("拖拽文件：回退本地上传成功",e),this.attachments.push(e),console.table(this.attachments),this.updateAttachmentPreview(),this.showNotification("✅ 文件上传成功","success")}else this.showNotification(`❌ 文件上传失败: ${s.message||s.error}`,"error")}catch(e){this.showNotification(`❌ 文件上传失败: ${e.message}`,"error")}}}showModal(e){document.getElementById("modalBody").innerHTML=e,document.getElementById("modal").style.display="block"}closeModal(){document.getElementById("modal").style.display="none"}async editApiKey(e){try{const t=await this.apiCall("/admin/api-keys");if(t.success){const s=t.api_keys.find((t=>t.id==e));s?this.showEditApiKeyModal(s):this.showNotification("API密钥不存在","error")}}catch(e){this.showNotification("获取API密钥信息失败","error")}}showEditApiKeyModal(e){const t=`\n            <h3>编辑API密钥</h3>\n            <form id="editApiKeyForm">\n                <div class="form-group">\n                    <label for="editApiKeyName">名称:</label>\n                    <input type="text" id="editApiKeyName" value="${e.name}" required>\n                </div>\n                <div class="form-group">\n                    <label for="editApiKeyValue">API密钥:</label>\n                    <input type="text" id="editApiKeyValue" value="${e.api_key}" required>\n                </div>\n                <div class="form-group">\n                    <label for="editApiKeyProLimit">Pro限制 (每分钟):</label>\n                    <input type="number" id="editApiKeyProLimit" value="${e.pro_rate_limit||10}" min="1" max="100" required>\n                </div>\n                <div class="checkbox-group">\n                    <label>\n                        <input type="checkbox" id="editApiKeyActive" ${e.is_active?"checked":""}>\n                        启用此API密钥\n                    </label>\n                </div>\n                <div class="form-actions">\n                    <button type="submit" class="btn-primary">更新</button>\n                    <button type="button" class="btn-secondary" onclick="app.closeModal()">取消</button>\n                </div>\n            </form>\n        `;this.showModal(t),document.getElementById("editApiKeyForm").addEventListener("submit",(t=>{t.preventDefault(),this.updateApiKey(e.id)}))}async updateApiKey(e){const t=document.getElementById("editApiKeyName").value.trim(),s=document.getElementById("editApiKeyValue").value.trim(),i=parseInt(document.getElementById("editApiKeyProLimit").value),n=document.getElementById("editApiKeyActive").checked;if(t&&s)try{const o=await this.apiCall("/admin/api-keys",{method:"PUT",body:{id:e,name:t,api_key:s,pro_rate_limit:i,is_active:n?1:0}});o.success?(this.showNotification("API密钥更新成功","success"),this.closeModal(),this.loadApiKeys()):this.showNotification(o.message,"error")}catch(e){this.showNotification(e.message,"error")}else this.showNotification("请填写所有必填字段","error")}async deleteApiKey(e){if(confirm("确定要删除这个API密钥吗？"))try{const t=await this.apiCall("/admin/api-keys",{method:"DELETE",body:{id:e}});t.success?(this.showNotification("API密钥删除成功","success"),this.loadApiKeys()):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}async toggleUserAdmin(e){try{const t=await this.apiCall("/admin/user/toggle-admin",{method:"POST",body:{user_id:e}});t.success?(this.showNotification("用户状态更新成功","success"),this.loadUsers()):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}async deleteUser(e){if(confirm("确定要删除这个用户吗？"))try{const t=await this.apiCall("/admin/users",{method:"DELETE",body:{user_id:e}});t.success?(this.showNotification("用户删除成功","success"),this.loadUsers()):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}async loadSystemSettings(){try{const e=await this.apiCall("/admin/settings");e.success&&this.renderSystemSettings(e.settings)}catch(e){this.showNotification("加载系统设置失败","error")}}renderSystemSettings(e){const t=document.getElementById("registrationToggle"),s=document.getElementById("defaultProToggle");t.checked="1"===e.registration_enabled,s.checked="1"===e.default_pro_access,t.onchange=()=>this.updateRegistrationSetting(t.checked),s.onchange=()=>this.updateDefaultProSetting(s.checked)}async updateRegistrationSetting(e){try{const t=await this.apiCall("/admin/settings/registration",{method:"POST",body:{enabled:e}});t.success?this.showNotification("注册设置更新成功","success"):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}async updateDefaultProSetting(e){try{const t=await this.apiCall("/admin/settings",{method:"POST",body:{setting_key:"default_pro_access",setting_value:e?"1":"0",description:"新用户默认Pro访问权限"}});t.success?this.showNotification("默认Pro设置更新成功","success"):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}async editUser(e){try{const t=await this.apiCall("/admin/users");if(t.success){const s=t.users.find((t=>t.id===e));s&&this.showEditUserModal(s)}}catch(e){this.showNotification("获取用户信息失败","error")}}showEditUserModal(e){const t=`\n            <h2>编辑用户</h2>\n            <form id="editUserForm">\n                <div class="form-group">\n                    <label for="editUsername">用户名</label>\n                    <input type="text" id="editUsername" value="${e.username}" required>\n                </div>\n                <div class="form-group">\n                    <label for="editEmail">邮箱</label>\n                    <input type="email" id="editEmail" value="${e.email||""}">\n                </div>\n                <div class="form-group">\n                    <label for="editPassword">新密码（留空则不修改）</label>\n                    <input type="password" id="editPassword">\n                </div>\n                <div class="checkbox-group">\n                    <input type="checkbox" id="editIsAdmin" ${e.is_admin?"checked":""}>\n                    <label for="editIsAdmin">管理员权限</label>\n                </div>\n                <div class="checkbox-group">\n                    <input type="checkbox" id="editCanUsePro" ${e.can_use_pro?"checked":""}>\n                    <label for="editCanUsePro">Pro访问权限</label>\n                </div>\n                <div style="margin-top: 20px; text-align: right;">\n                    <button type="button" class="btn-secondary" onclick="app.closeModal()">取消</button>\n                    <button type="submit" class="btn-primary">保存</button>\n                </div>\n            </form>\n        `;this.showModal(t),document.getElementById("editUserForm").onsubmit=t=>{t.preventDefault(),this.updateUser(e.id)}}async updateUser(e){const t=document.getElementById("editUsername").value,s=document.getElementById("editEmail").value,i=document.getElementById("editPassword").value,n=document.getElementById("editIsAdmin").checked,o=document.getElementById("editCanUsePro").checked;try{const a={user_id:e,username:t,email:s,is_admin:n,can_use_pro:o};i&&(a.password=i);const c=await this.apiCall("/admin/user/update",{method:"POST",body:a});c.success?(this.showNotification("用户更新成功","success"),this.closeModal(),this.loadUsers()):this.showNotification(c.message,"error")}catch(e){this.showNotification(e.message,"error")}}async toggleUserPro(e){try{const t=await this.apiCall("/admin/user/toggle-pro",{method:"POST",body:{user_id:e}});t.success?(this.showNotification("Pro访问权限更新成功","success"),this.loadUsers()):this.showNotification(t.message,"error")}catch(e){this.showNotification(e.message,"error")}}showAddUserModal(){this.showModal('\n            <h2>添加用户</h2>\n            <form id="addUserForm">\n                <div class="form-group">\n                    <label for="newUsername">用户名</label>\n                    <input type="text" id="newUsername" required>\n                </div>\n                <div class="form-group">\n                    <label for="newEmail">邮箱</label>\n                    <input type="email" id="newEmail">\n                </div>\n                <div class="form-group">\n                    <label for="newPassword">密码</label>\n                    <input type="password" id="newPassword" required>\n                </div>\n                <div class="checkbox-group">\n                    <input type="checkbox" id="newIsAdmin">\n                    <label for="newIsAdmin">管理员权限</label>\n                </div>\n                <div class="checkbox-group">\n                    <input type="checkbox" id="newCanUsePro">\n                    <label for="newCanUsePro">Pro访问权限</label>\n                </div>\n                <div style="margin-top: 20px; text-align: right;">\n                    <button type="button" class="btn-secondary" onclick="app.closeModal()">取消</button>\n                    <button type="submit" class="btn-primary">创建</button>\n                </div>\n            </form>\n        '),document.getElementById("addUserForm").onsubmit=e=>{e.preventDefault(),this.createUser()}}async createUser(){const e=document.getElementById("newUsername").value,t=document.getElementById("newEmail").value,s=document.getElementById("newPassword").value,i=document.getElementById("newIsAdmin").checked,n=document.getElementById("newCanUsePro").checked;try{const o=await this.apiCall("/admin/user/create",{method:"POST",body:{username:e,email:t,password:s,is_admin:i,can_use_pro:n}});o.success?(this.showNotification("用户创建成功","success"),this.closeModal(),this.loadUsers()):this.showNotification(o.message,"error")}catch(e){this.showNotification(e.message,"error")}}showAddApiKeyModal(){this.showModal('\n            <h2>添加API密钥</h2>\n            <form id="addApiKeyForm">\n                <div class="form-group">\n                    <label for="newKeyName">密钥名称</label>\n                    <input type="text" id="newKeyName" required>\n                </div>\n                <div class="form-group">\n                    <label for="newApiKey">API密钥</label>\n                    <input type="text" id="newApiKey" required>\n                </div>\n                <div class="form-group">\n                    <label for="newKeyProLimit">Pro限制 (每分钟)</label>\n                    <input type="number" id="newKeyProLimit" value="10" min="1" max="100" required>\n                </div>\n                <div class="checkbox-group">\n                    <label>\n                        <input type="checkbox" id="newKeyActive" checked>\n                        启用此API密钥\n                    </label>\n                </div>\n                <div class="form-actions">\n                    <button type="button" class="btn-secondary" onclick="app.closeModal()">取消</button>\n                    <button type="submit" class="btn-primary">添加</button>\n                </div>\n            </form>\n        '),document.getElementById("addApiKeyForm").onsubmit=e=>{e.preventDefault(),this.createApiKey()}}async createApiKey(){const e=document.getElementById("newKeyName").value.trim(),t=document.getElementById("newApiKey").value.trim(),s=parseInt(document.getElementById("newKeyProLimit").value),i=document.getElementById("newKeyActive").checked;if(e&&t)try{const n=await this.apiCall("/admin/api-keys",{method:"POST",body:{name:e,api_key:t,pro_rate_limit:s,is_active:i?1:0}});n.success?(this.showNotification("API密钥添加成功","success"),this.closeModal(),this.loadApiKeys()):this.showNotification(n.message,"error")}catch(e){this.showNotification(e.message,"error")}else this.showNotification("请填写所有必填字段","error")}showImagePreview(e,t){let s=document.getElementById("imagePreviewModal");s||(s=document.createElement("div"),s.id="imagePreviewModal",s.className="image-preview-modal",s.innerHTML='\n                <div class="image-preview-overlay" onclick="app.closeImagePreview()"></div>\n                <div class="image-preview-container">\n                    <button class="image-preview-close" onclick="app.closeImagePreview()">\n                        <i class="fas fa-times"></i>\n                    </button>\n                    <div class="image-preview-content">\n                        <img id="previewImage" src="" alt="">\n                        <div class="image-preview-info">\n                            <i class="fas fa-image"></i>\n                            <span id="previewImageName"></span>\n                        </div>\n                    </div>\n                    <div class="image-preview-actions">\n                        <a id="downloadImageBtn" href="" download="" class="btn-icon" title="下载图片">\n                            <i class="fas fa-download"></i>\n                        </a>\n                    </div>\n                </div>\n            ',document.body.appendChild(s),document.addEventListener("keydown",(e=>{"Escape"===e.key&&s.classList.contains("active")&&this.closeImagePreview()})));const i=document.getElementById("previewImage"),n=document.getElementById("previewImageName"),o=document.getElementById("downloadImageBtn");i.src=e,i.alt=t,n.textContent=t,o.href=e,o.download=t,s.classList.add("active"),document.body.style.overflow="hidden",setTimeout((()=>{s.classList.add("loaded")}),10)}closeImagePreview(){const e=document.getElementById("imagePreviewModal");e&&(e.classList.remove("loaded"),setTimeout((()=>{e.classList.remove("active"),document.body.style.overflow=""}),300))}async deleteSession(e){if(!confirm("确定要删除这个对话吗？删除后无法恢复。"))return;const t=document.querySelector(`[data-session-id="${e}"]`);if(t){t.style.opacity="0.5",t.style.pointerEvents="none";const e=t.querySelector(".session-item-actions");e&&(e.innerHTML='<div class="session-loading"><i class="fas fa-spinner fa-spin"></i></div>')}this.currentSession&&this.currentSession.id==e&&(this.currentSession=null,document.getElementById("currentSessionTitle").textContent="选择或创建新对话",document.getElementById("editTitleBtn").style.display="none",document.getElementById("chatMessages").innerHTML='\n                <div class="welcome-message">\n                    <div class="welcome-icon">\n                        <i class="fas fa-robot"></i>\n                    </div>\n                    <h3>欢迎使用 WawaCloud AI 聊天助手</h3>\n                    <p>我是娃娃团队旗下基于googleGemini训练开发的Ai助手</p>\n                    <p>我可以帮助您解答问题、分析图片、处理文档等。开始新对话吧！</p>\n                    <div class="feature-list">\n                        <div class="feature-item">\n                            <i class="fas fa-image"></i>\n                            <span>图片分析</span>\n                        </div>\n                        <div class="feature-item">\n                            <i class="fas fa-search"></i>\n                            <span>网络搜索</span>\n                        </div>\n                        <div class="feature-item">\n                            <i class="fas fa-brain"></i>\n                            <span>智能推理</span>\n                        </div>\n                        <div class="feature-item">\n                            <i class="fas fa-file-alt"></i>\n                            <span>文档处理</span>\n                        </div>\n                    </div>\n                </div>\n            ');try{const s=await this.apiCall("/chat/sessions",{method:"DELETE",body:{session_id:e}});if(s.success)this.showNotification("对话删除成功","success"),t&&(t.style.transform="translateX(-100%)",setTimeout((()=>{t.remove()}),300));else{if(t){t.style.opacity="1",t.style.pointerEvents="auto";const s=t.querySelector(".session-item-actions");s&&(s.innerHTML=`\n                            <button class="session-delete-btn" onclick="event.stopPropagation(); app.deleteSession(${e});" title="删除">\n                                <i class="fas fa-trash"></i>\n                            </button>\n                        `)}this.showNotification(s.message||"删除失败","error")}}catch(s){if(t){t.style.opacity="1",t.style.pointerEvents="auto";const s=t.querySelector(".session-item-actions");s&&(s.innerHTML=`\n                        <button class="session-delete-btn" onclick="event.stopPropagation(); app.deleteSession(${e});" title="删除">\n                            <i class="fas fa-trash"></i>\n                        </button>\n                    `)}this.showNotification("删除对话失败","error")}}showAdminProfileModal(){const e=`\n            <div class="modal-header">\n                <h3>修改个人资料</h3>\n                <button class="modal-close" onclick="app.closeModal()">&times;</button>\n            </div>\n            <div class="modal-body">\n                <form id="adminProfileForm" onsubmit="app.updateAdminProfile(event)">\n                    <div class="form-group">\n                        <label for="adminUsername">用户名</label>\n                        <input type="text" id="adminUsername" value="${this.currentUser.username}" required>\n                    </div>\n                    <div class="form-group">\n                        <label for="adminCurrentPassword">当前密码</label>\n                        <input type="password" id="adminCurrentPassword" required>\n                    </div>\n                    <div class="form-group">\n                        <label for="adminNewPassword">新密码（留空则不修改）</label>\n                        <input type="password" id="adminNewPassword">\n                    </div>\n                    <div class="form-group">\n                        <label for="adminConfirmPassword">确认新密码</label>\n                        <input type="password" id="adminConfirmPassword">\n                    </div>\n                    <div class="form-actions">\n                        <button type="button" class="btn btn-secondary" onclick="app.closeModal()">取消</button>\n                        <button type="submit" class="btn btn-primary">保存</button>\n                    </div>\n                </form>\n            </div>\n        `;this.showModal(e)}async updateAdminProfile(e){e.preventDefault();const t=document.getElementById("adminUsername").value.trim(),s=document.getElementById("adminCurrentPassword").value,i=document.getElementById("adminNewPassword").value,n=document.getElementById("adminConfirmPassword").value;if(t&&s)if(i&&i!==n)this.showNotification("新密码和确认密码不匹配","error");else try{const e=await this.apiCall("/admin/profile/update",{method:"POST",body:{username:t,current_password:s,new_password:i||null}});e.success?(this.showNotification("个人资料更新成功","success"),this.closeModal(),this.currentUser.username=t):this.showNotification(e.message,"error")}catch(e){this.showNotification("更新个人资料失败","error")}else this.showNotification("请填写用户名和当前密码","error")}initMobileInputAdaptation(){const e=document.getElementById("messageInput"),t=document.querySelector(".chat-input-container"),s=document.getElementById("chatMessages");if(!e||!t||!s)return;if(!(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768))return;let i=!1,n=window.innerHeight,o=null,a=null,c=!1;const r=()=>{const e=window.innerHeight;return e>=900?{heightThreshold:200,adaptDelay:150,blurDelay:500,focusDelay:400}:e>=700?{heightThreshold:150,adaptDelay:100,blurDelay:300,focusDelay:300}:{heightThreshold:100,adaptDelay:50,blurDelay:200,focusDelay:200}},d=()=>{o&&clearTimeout(o);const e=r();o=setTimeout((()=>{const t=window.innerHeight;n-t>e.heightThreshold?i||(i=!0,this.adaptToKeyboard(!0)):i&&(i=!1,this.adaptToKeyboard(!1))}),e.adaptDelay)};e.addEventListener("focus",(()=>{const e=r();setTimeout((()=>{d()}),e.focusDelay)})),e.addEventListener("blur",(()=>{a&&clearTimeout(a);const e=r();a=setTimeout((()=>{c?setTimeout((()=>{i=!1,this.adaptToKeyboard(!1)}),1e3):(i=!1,this.adaptToKeyboard(!1))}),e.blurDelay)}));const l=document.getElementById("sendBtn");l&&l.addEventListener("click",(()=>{c=!0,setTimeout((()=>{c=!1}),2e3)})),e.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(c=!0,setTimeout((()=>{c=!1}),2e3))})),window.addEventListener("resize",d),window.visualViewport&&window.visualViewport.addEventListener("resize",d)}adaptToKeyboard(e){const t=document.querySelector(".chat-input-container"),s=document.getElementById("chatMessages"),i=document.querySelector(".main-chat"),n=document.querySelector(".chat-header-new");if(!t||!s||!i)return;const o=window.innerHeight>=900;if(e){t.style.position="fixed",t.style.bottom="0",t.style.left="0",t.style.right="0",t.style.zIndex="1000";const e=t.offsetHeight,a=o?60:40;s.style.paddingBottom=`calc(${e+a}px + env(safe-area-inset-bottom))`,i.style.height="100vh",i.style.maxHeight="100vh",i.style.overflow="hidden",n&&(n.style.position="sticky",n.style.top="0",n.style.zIndex="10",n.style.flexShrink="0");setTimeout((()=>{this.scrollToBottom()}),o?200:100)}else{const e=s.scrollTop;t.style.position="",t.style.bottom="",t.style.left="",t.style.right="",t.style.zIndex="",s.style.paddingBottom="",s.style.minHeight="auto",o&&(s.style.transition="none",s.offsetHeight,s.style.transition=""),i.style.height="",i.style.maxHeight="",i.style.overflow="",n&&(n.style.position="",n.style.top="",n.style.zIndex="",n.style.flexShrink=""),setTimeout((()=>{s.scrollTop=e}),50),this.preventPageZoom()}}preventPageZoom(){const e=document.querySelector('meta[name="viewport"]');e&&e.setAttribute("content","width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"),setTimeout((()=>{document.body.style.zoom="1",document.documentElement.style.zoom="1"}),100)}initLoginInputAdaptation(){const e=document.querySelectorAll("#loginUsername, #loginPassword, #registerUsername, #registerEmail, #registerPassword, #registerConfirmPassword"),t=document.querySelector(".login-container"),s=document.querySelector(".login-box");if(!e.length||!t||!s)return;if(!(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768))return;let i=!1,n=window.innerHeight;const o=()=>{const e=window.innerHeight;n-e>150?i||(i=!0,this.adaptLoginToKeyboard(!0,t,s)):i&&(i=!1,this.adaptLoginToKeyboard(!1,t,s))};e.forEach((e=>{e.addEventListener("focus",(()=>{setTimeout((()=>{o()}),300)})),e.addEventListener("blur",(()=>{i=!1,this.adaptLoginToKeyboard(!1,t,s)}))})),window.addEventListener("resize",o),window.visualViewport&&window.visualViewport.addEventListener("resize",o)}adaptLoginToKeyboard(e,t,s){t&&s&&(e?(t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.right="0",t.style.bottom="0",t.style.height="100vh",t.style.maxHeight="100vh",t.style.overflow="hidden",s.style.maxHeight="calc(100vh - 40px)",s.style.overflowY="auto",s.style.webkitOverflowScrolling="touch",setTimeout((()=>{const e=document.activeElement;e&&"INPUT"===e.tagName&&e.scrollIntoView({behavior:"smooth",block:"center"})}),100)):(t.style.position="",t.style.top="",t.style.left="",t.style.right="",t.style.bottom="",t.style.height="",t.style.maxHeight="",t.style.overflow="",s.style.maxHeight="",s.style.overflowY="",s.style.webkitOverflowScrolling="",this.preventPageZoom()))}async generateImage(e){if(this.currentSession||(await this.createNewSession(),this.currentSession)){this.isLoading=!0,this.updateSendButton(),this.disableUserInput(!0);try{this.addMessageToUI({role:"user",content:`🎨 生成图片：${e}`,created_at:(new Date).toISOString()});document.getElementById("messageInput").value="";const t=this.addThinkingMessage();this.scrollToBottom();const s=await this.apiCall("/generate-image",{method:"POST",body:{prompt:e,session_id:this.currentSession.id}});if(this.removeThinkingMessage(t),s.success){console.log("🎨 图片生成成功:",{hasImage:!!s.image,hasText:!!s.text,imageLength:s.image?s.image.length:0,textLength:s.text?s.text.length:0,mimeType:s.mimeType,responseTime:s.response_time});let t="";if(s.text&&(t+=this.formatMessageText(s.text)),s.image){t+=`\n                        <div class="generated-image">\n                            <img src="data:${s.mimeType||"image/png"};base64,${s.image}" alt="${e}" />\n                            <p class="image-prompt">提示词：${e}</p>\n                            <p class="image-time">生成时间：${s.response_time.toFixed(2)}秒</p>\n                        </div>\n                    `}if(!s.text&&!s.image)return void this.showNotification("图片生成失败：没有返回内容","error");this.addMessageToUI({role:"assistant",content:t,created_at:(new Date).toISOString()}),this.scrollToBottom(),s.text&&s.image?this.showNotification("文字和图片生成成功！","success"):s.text?this.showNotification("文字生成成功！","success"):s.image&&this.showNotification("图片生成成功！","success"),setTimeout((()=>{this.isMobile?this.updateSessionListOnly():this.loadSessions()}),1e3)}else this.showNotification("正在开发生成图片功能中，请勿使用")}catch(e){this.showNotification("正在开发生成图片功能中，请勿使用"),this.removeThinkingMessage(thinkingMessageId)}finally{this.isLoading=!1,this.updateSendButton(),this.disableUserInput(!1)}}}}const app=new GeminiChatApp;
